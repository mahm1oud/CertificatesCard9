/**
 * ูุญูู ูุงุนุฏุฉ ุงูุจูุงูุงุช - ุงูุฅุตุฏุงุฑ 3.0
 * 
 * ูุฏู ูุฐุง ุงูููู: 
 * 1) ูุนุชูุฏ MySQL ููุงุนุฏุฉ ุจูุงูุงุช ุฑุฆูุณูุฉ ูููุดุฑูุน (ูููุณุชูุฌุฑ ูุงูุฅูุชุงุฌ)
 * 2) ูุณุชุฎุฏู PostgreSQL ููุท ูู Replit ููุญุงูุงุฉ (ูุชุดุบูู ุงููุดุฑูุน ูู ุงูุจูุฆุฉ ุงูุชุทููุฑูุฉ)
 * 
 * ุงูุฅุณุชุฑุงุชูุฌูุฉ:
 * - ูู ููุณุชูุฌุฑ ูุงูุฅูุชุงุฌ: ุงุณุชุฎุฏุงู MySQL ุฏุงุฆูุงู
 * - ูู Replit: ุงุณุชุฎุฏุงู PostgreSQL (ููุญุงูุงุฉ ููู MySQL) ูุชุฌูุจ ุชููู ุงููุดุฑูุน
 */

import { loadEnv } from './env-loader';
import * as pgAdapter from '../db';         // ุงุณุชูุฑุงุฏ ูุญูู PostgreSQL (ููุงุณุชุฎุฏุงู ูู Replit)
import * as mysqlAdapter from '../db.mysql'; // ุงุณุชูุฑุงุฏ ูุญูู MySQL (ููุงุณุชุฎุฏุงู ูู ุงูุฅูุชุงุฌ)

// ุชุญููู ุงููุชุบูุฑุงุช ุงูุจูุฆูุฉ
loadEnv();

// ุชุญุฏูุฏ ุจูุฆุฉ ุงูุชุดุบูู
const isReplit = process.env.REPL_ID !== undefined;
const isProduction = process.env.NODE_ENV === 'production';

// ุชุญุฏูุฏ ููุน ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงููุทููุจ ุงุณุชุฎุฏุงูู
const requestedDbType = process.env.DB_TYPE?.toLowerCase() || 'mysql';  // MySQL ูู ุงูุฎูุงุฑ ุงูุงูุชุฑุงุถู

// ุงููุงุนุฏุฉ:
// 1. ูู Replit: ุงุณุชุฎุฏู PostgreSQL ุฏุงุฆููุง (ุชุฌุงูุฒ ุฃู ุฅุนุฏุงุฏุงุช)
// 2. ุฎุงุฑุฌ Replit: ุงุณุชุฎุฏู ูุง ูู ูุญุฏุฏ ูู DB_TYPE (ุนุงุฏุฉ MySQL)
let DB_TYPE = isReplit ? 'postgres' : requestedDbType;

// ุฅุธูุงุฑ ุงููุนูููุงุช ุงูุชุดุฎูุตูุฉ
console.log(`\n==== ูุนูููุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช ====`);
console.log(`๐ ุงูุจูุฆุฉ: ${isProduction ? 'ุฅูุชุงุฌ' : 'ุชุทููุฑ'}${isReplit ? ' (Replit)' : ''}`);
console.log(`๐ ููุน ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงููุทููุจ: ${requestedDbType}`);
console.log(`๐ ููุน ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงููุณุชุฎุฏู ุจุงููุนู: ${DB_TYPE}`);

// ุฅุธูุงุฑ ูุตู ููุตู ูููุฑุงุฑ ุงููุชุฎุฐ
if (isReplit && requestedDbType !== 'postgres') {
  console.log(`โน๏ธ ูู Replitุ ูุชู ุงุณุชุฎุฏุงู PostgreSQL ููุญุงูุงุฉ ูู ${requestedDbType} ูุชุฌูุจ ุชููู ุงููุดุฑูุน`);
  console.log(`โน๏ธ ูู ุจูุฆุฉ ุงูุฅูุชุงุฌ (ููุณุชูุฌุฑ)ุ ุณูุชู ุงุณุชุฎุฏุงู MySQL ููุงุนุฏุฉ ุงูุจูุงูุงุช ุงูุฑุฆูุณูุฉ`);
}

// ุงุฎุชูุงุฑ ุงููุญูู ุงูููุงุณุจ
let adapter: any;

if (DB_TYPE === 'mysql') {
  console.log(`๐ ุฌุงุฑู ุชููุฆุฉ ูุงุนุฏุฉ ุจูุงูุงุช MySQL...`);
  adapter = mysqlAdapter;
} else {
  console.log(`๐ ุฌุงุฑู ุชููุฆุฉ ูุงุนุฏุฉ ุจูุงูุงุช PostgreSQL...`);
  adapter = pgAdapter;
}

// ุชุตุฏูุฑ ุงููุงุฌูุฉ ุงูููุญุฏุฉ
export const pool = adapter.pool;
export const db = adapter.db;
export const usingMemoryMode = adapter.usingMemoryMode;
export const checkDatabaseConnection = adapter.checkDatabaseConnection;
export const withDatabaseRetry = adapter.withDatabaseRetry;
export const getDatabaseInfo = adapter.getDatabaseInfo || (() => ({ 
  type: DB_TYPE,
  usingMemoryMode: adapter.usingMemoryMode 
}));

// ุชุตุฏูุฑ ุงููุญูู ูุงููุงู ูููุญูู ุงูุชุฑุงุถู
export default adapter;